diff -r fc829e8e0de5 configure.ac
--- a/configure.ac	Sat Oct 23 17:09:14 2010 +0300
+++ b/configure.ac	Sun Oct 24 02:42:31 2010 +0300
@@ -144,6 +144,9 @@
 
 AM_PROG_CC_C_O
 
+dnl Check installed pkg-config
+PKG_PROG_PKG_CONFIG
+
 dnl Work out how to specify the linker script to the linker.
 VERSION_SCRIPT_FLAGS=-Wl,--version-script=
 `/usr/bin/ld --help 2>&1 | grep -- --version-script >/dev/null` || \
@@ -470,23 +473,40 @@
 AC_SUBST([HIVEX_LIBS])
 
 dnl FUSE is optional to build the FUSE module.
-HAVE_FUSE=yes
-PKG_CHECK_MODULES([FUSE],[fuse],,[
-        HAVE_FUSE=no
-        AC_MSG_WARN([FUSE library and headers are missing, so optional FUSE module won't be built])])
-AM_CONDITIONAL([HAVE_FUSE],[test "x$HAVE_FUSE" = "xyes"])
+enable_fuse=no
+AC_ARG_ENABLE([fuse],
+	AS_HELP_STRING([--enable-fuse],[Enable fuse]))
+
+HAVE_FUSE=
+
+AS_IF([test "x$enable_fuse" = "xyes"], 
+   [PKG_CHECK_MODULES([FUSE],[fuse],[HAVE_FUSE=1],
+   [AC_MSG_ERROR([FUSE library and headers are missing, so optional FUSE module wont be built]) 
+	]) ])
+
+AM_CONDITIONAL([HAVE_FUSE],[test "x$HAVE_FUSE" = "xyes" -a "x$enable_fuse" != "xno"])
+
 
 dnl Check for OCaml (optional, for OCaml bindings).
+enable_ocaml=no
+AC_ARG_ENABLE([ocaml],
+	AS_HELP_STRING([--enable-ocaml],[Enable ocaml binding]))
+
+
 AC_PROG_OCAML
 AC_PROG_FINDLIB
-AM_CONDITIONAL([HAVE_OCAML],[test "x$OCAMLC" != "xno" && test "x$OCAMLFIND" != "xno"])
+AM_CONDITIONAL([HAVE_OCAML],[test "x$OCAMLC" != "xno" && test "x$OCAMLFIND" != "xno" -a "x$enable_ocaml" != "xno"])
 
 dnl Optional xml-light for running the generator.
 OCAML_PKG_xml_light=no
-if test "x$OCAMLC" != "xno" && test "x$OCAMLFIND" != "xno"; then
-    AC_CHECK_OCAML_PKG([xml-light])
-fi
-AM_CONDITIONAL([HAVE_XML_LIGHT],[test "x$OCAML_PKG_xml_light" != "xno"])
+AS_IF([test "x$OCAMLC" != "xno" -a test "x$OCAMLFIND" != "xno"],[
+    AC_CHECK_OCAML_PKG([xml-light])])
+
+
+AC_ARG_ENABLE([generator]),
+	AS_HELP_STRING([--enable-generator],[Enable generator]))
+
+AM_CONDITIONAL([HAVE_XML_LIGHT],[test "x$OCAML_PKG_xml_light" != "xno" -a "x$enable_generator" != "xno"])
 
 dnl Build the OCaml viewer example.  This has a lengthy list of
 dnl dependencies and we don't attempt to detect them all.  Read
@@ -500,11 +520,16 @@
 
 dnl Check for Perl (optional, for Perl bindings).
 dnl XXX This isn't quite right, we should check for Perl devel library.
-AC_CHECK_PROG([PERL],[perl],[perl],[no])
+enable_perl=no
+
+AC_ARG_ENABLE([perl],
+	[AS_HELP_STRING([--enable-perl],[enable Perl bindings])],
+	[AC_CHECK_PROG([PERL],[perl],[perl],[no])
 
 dnl Check for Perl modules that must be present to compile and
 dnl test the Perl bindings.
 missing_perl_modules=no
+PERL=
 for pm in Test::More ExtUtils::MakeMaker; do
     AC_MSG_CHECKING([for $pm])
     if ! perl -M$pm -e1 >/dev/null 2>&1; then
@@ -515,13 +540,19 @@
     fi
 done
 if test "x$missing_perl_modules" = "xyes"; then
-    AC_MSG_WARN([some Perl modules required to compile or test the Perl bindings are missing])
+    AC_MSG_FAILURE([some Perl modules required to compile or test the Perl bindings are missing])
 fi
 
+)]
+
 AM_CONDITIONAL([HAVE_PERL],
-    [test "x$PERL" != "xno" && test "x$missing_perl_modules" != "xyes"])
+    [test "x$PERL" != "xno" -a "x$missing_perl_modules" != "xyes" -a "x$enable_perl" != "xno"])
+
 
 dnl Check for Python (optional, for Python bindings).
+
+dnl howtoo build twice python ? i.e for 2.x and 3.x version ?
+
 AC_CHECK_PROG([PYTHON],[python],[python],[no])
 
 PYTHON_PREFIX=
@@ -575,12 +606,23 @@
 AM_CONDITIONAL([HAVE_PYTHON],
     [test "x$PYTHON_INCLUDEDIR" != "x" && test "x$PYTHON_SITE_PACKAGES" != "x"])
 
+
+
 dnl Check for Ruby and rake (optional, for Ruby bindings).
-AC_CHECK_LIB([ruby],[ruby_init],[HAVE_LIBRUBY=1],[HAVE_LIBRUBY=0])
-AC_CHECK_PROG([RAKE],[rake],[rake],[no])
+enable_ruby=no
+
+AC_ARG_ENABLE([ruby],
+	AS_HELP_STRING([--enable-rubu], [Enable ruby bindings]))
+
+RAKE=
+HAVE_LIBRUBY=
+AS_IF([test "x$enable_ruby" != "xno"],
+	[AC_CHECK_LIB([ruby],[ruby_init],[HAVE_LIBRUBY=1],[HAVE_LIBRUBY=0])
+	AC_CHECK_PROG([RAKE],[rake],[rake],[no])]
+	)
 
 AM_CONDITIONAL([HAVE_RUBY],
-    [test "x$RAKE" != "xno" && test -n "$HAVE_LIBRUBY"])
+    [test "x$RAKE" != "xno" -a test -n "$HAVE_LIBRUBY" -a "x$enable_ruby" != "xno"])
 
 dnl Check for Java.
 AC_ARG_WITH(java_home,
@@ -720,13 +762,17 @@
 AC_SUBST(JNI_INSTALL_DIR)
 AC_SUBST(JNI_VERSION_INFO)
 
-AM_CONDITIONAL([HAVE_JAVA],[test -n "$JAVAC"])
+AM_CONDITIONAL([HAVE_JAVA],[test -n "$JAVAC" -a "x$with_java" != "xno"])
 
 dnl Check for Haskell (GHC).
-AC_CHECK_PROG([GHC],[ghc],[ghc],[no])
+AC_ARG_ENABLE([hackell],
+	AS_HELP_STRING([--enable-hackell], [Enable hackel(GHC) binding]))
 
-AM_CONDITIONAL([HAVE_HASKELL],
-    [test "x$GHC" != "xno"])
+GHC=
+AS_IF([test "x$enable_hackell" != "xno"],
+	[AC_CHECK_PROG([GHC],[ghc],[ghc],[no])]
+
+AM_CONDITIONAL([HAVE_HASKELL], [test "x$GHC" != "xno" -a "x$enable_hackell" != "xno"])
 
 dnl Check for Perl modules needed by virt-df, inspector, etc.
 missing_perl_modules=no
@@ -753,9 +799,16 @@
 AM_CONDITIONAL([HAVE_PO4A], [test "x$PO4A" != "xno"])
 
 dnl PHP
-AC_CHECK_PROG([PHP],[php],[php],[no])
-AC_CHECK_PROG([PHPIZE],[phpize],[phpize],[no])
-AM_CONDITIONAL([HAVE_PHP], [test "x$PHP" != "xno" && test "x$PHPIZE" != "xno"])
+PHP=
+
+AC_ARG_ENABLE([php],
+	AS_HELP_STRING([--enable-php],[Enable php binding]))
+
+AS_IF([test "x$enable_php" != "xno"],[
+	AC_CHECK_PROG([PHP],[php],[php],[no])
+	AC_CHECK_PROG([PHPIZE],[phpize],[phpize],[no])])
+
+AM_CONDITIONAL([HAVE_PHP], [test "x$PHP" != "xno" && test "x$PHPIZE" != "xno" -a "x$enable_php" != "xno"])
 
 dnl Library versioning.
 MAX_PROC_NR=`cat $srcdir/src/MAX_PROC_NR`
