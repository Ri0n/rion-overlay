diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -4,7 +4,7 @@
 
 AC_INIT([libzdb], [2.7], [bugs-libzdb@tildeslash.com])
 AC_CONFIG_AUX_DIR(config)
-AC_CONFIG_MACRO_DIR([m4])
+AC_CONFIG_MACRO_DIR([config])
 AM_INIT_AUTOMAKE
 AC_CONFIG_SRCDIR([src/Config.h])
 AC_CONFIG_COMMANDS([libtool_patch],[test `uname` = "OpenBSD" && perl -p -i -e "s/deplibs_check_method=.*/deplibs_check_method=pass_all/g" libtool])
@@ -16,6 +16,7 @@
 
 AC_PROG_CC
 AC_PROG_GCC_TRADITIONAL
+PKG_PROG_PKG_CONFIG
 AC_PATH_PROG([RE2C], [re2c], [re2c_not_found], [$PATH:/usr/local/bin:/usr/bin])
 AC_PATH_PROG([FLEX], [flex], [no])
 if test "x$FLEX" = "xno"; then
@@ -109,6 +110,7 @@
     ]
 )
 
+openssl="false"
 AC_ARG_ENABLE([openssl],
         AS_HELP_STRING([--enable-openssl(=<path>)], 
                 [Link libzdb with openssl. If database libraries were linked static,
@@ -118,19 +120,14 @@
                 link with]),
      [
         openssl="true"
-        if test "x$enableval" = "xyes"; then
+	  AS_IF([test "x$enable_openssl" != "xno"], [
+	  PKG_CHECK_MODULES([openssl], [openssl >= 0.9])
 		AC_CHECK_LIB([ssl], [SSL_library_init], [], [AC_MSG_ERROR([libssl not found])])
 		AC_CHECK_LIB([crypto], [SHA1_Init], [], [AC_MSG_ERROR([libcrypto not found])])
-	else
-                AC_MSG_CHECKING([for openssl in $enableval])
-                LDFLAGS="-L$enableval/lib -lssl -lcrypto $LDFLAGS "
-                CPPFLAGS="-I$enableval/include $CPPFLAGS"
-                if test -r "$enableval/lib/libssl.a" -a -r "$enableval/lib/libcrypto.a"; then
-                        AC_MSG_RESULT([ok])
-                else
-                       AC_MSG_ERROR([openssl not found in $enableval])
-                fi
-        fi
+		LDFLAGS="$LDFLAGS `$PKG_CONFIG --libs-only-l  openssl`"
+		openssl="true"
+		  ])
+
      ],[openssl="false"])
 
 AC_ARG_ENABLE(sqliteunlock,
@@ -172,36 +169,29 @@
 
 # Database Libraries 
 
-mysql="yes"
+mysql="no"
 AC_MSG_CHECKING(for mysql)
 AC_ARG_WITH([mysql], 
         AS_HELP_STRING([--with-mysql(=<path>)], 
                 [path is optional and if given should specify the full path to the MySQL
                  configure script, mysql_config. E.g. --with-mysql=/<path>/mysql_config]), 
         [
-                if test "xno" = "x$with_mysql"; then
-                        AC_MSG_RESULT([no])
-                        mysql="no"
-                else
-                        AC_MSG_RESULT([yes])
-                        AC_CHECK_FILE([$with_mysql], 
-                        [
-                                MYSQLCONFIG=$with_mysql
-                        ], 
-                        [
-                                AC_MSG_WARN([mysql_config given as $with_mysql not found])
-                                mysql="no"
-                        ])        
-                fi
+		 if test "xyes" = "x$with_mysql"; then
+		  mysql="yes"
+		   AC_PATH_PROG([MYSQLCONFIG], [mysql_config], [no], [$PATH:/usr/local/bin:/usr/local/mysql/bin:/usr/bin])
+		   if test "x$MYSQLCONFIG" = "xno"; then
+		   	 AC_MSG_WARN([mysql_config is required to build libzdb with mysql])
+			  mysql="no"
+			   AC_MSG_RESULT([no])
+		   fi
+		   fi
+
         ],
         [
-                AC_MSG_RESULT([yes])
-                AC_PATH_PROG([MYSQLCONFIG], [mysql_config], [no], [$PATH:/usr/local/bin:/usr/local/mysql/bin])
-                if test "x$MYSQLCONFIG" = "xno"; then
-                        AC_MSG_WARN([mysql_config is required to build libzdb with mysql])
                         mysql="no"
-                fi
         ])
+
+
 if test "xyes" = "x$mysql"; then
         svd_CPPFLAGS=$CPPFLAGS
         svd_LDFLAGS=$LDFLAGS
diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,7 +1,7 @@
 # Copyright (C) 2010 Tildeslash Ltd. All rights reserved.
 
 AUTOMAKE_OPTIONS = foreign no-dependencies
-ACLOCAL_AMFLAGS  = -I m4
+ACLOCAL_AMFLAGS  = -I config
 
 SUBDIRS         = . $(UNIT_TEST)
 DIST_SUBDIRS    = . test
