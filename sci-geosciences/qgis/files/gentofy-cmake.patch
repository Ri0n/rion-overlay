--- CMakeLists.txt.orig	2009-09-06 22:53:07.735748358 +0300
+++ CMakeLists.txt	2009-09-06 22:57:31.520292900 +0300
@@ -8,18 +8,6 @@
 # Note the version no is Mmmpp for Major/minor/patch, 0-padded, thus '10100' for 1.1.0
 SET(QGIS_VERSION_INT 10200)
 
-# TODO:
-# - install includes for libs
-# - nice output when configured
-# - rename *.ui files to have the same filename as their implementation
-#   e.g. instead of blahblahbase.ui use blahblah.ui
-#   because it's more common in Qt4 
-# Note on last point above by Tim Sutton - I prefer to have the base suffix
-# as it indicates the ui generated class will be a base class for the widget.
-
-#############################################################
-# CMake settings
-
 CMAKE_MINIMUM_REQUIRED(VERSION 2.4.3)
 
 SET(CMAKE_COLOR_MAKEFILE ON)
@@ -27,51 +15,27 @@
 # set path to additional CMake modules
 SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
 
-# in generated makefiles use relative paths so the project dir is moveable
-# Note commented out since it cause problems but it would be nice to resolve these and enable
-# 
-# issue is caused by INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR}) near the end of this file generating incorrect path 
-#SET (CMAKE_USE_RELATIVE_PATHS ON)
-
-# it's possible to set PLUGINS_ALSO_BINARIES to TRUE
-# then some plugins that can run as standalone apps will be built
-# also as standalone apps
 SET (PLUGINS_ALSO_BINARIES FALSE)
 
-
-# try to configure and build GRASS plugin by default
-SET (WITH_GRASS TRUE CACHE BOOL "Determines whether GRASS plugin should be built")
 IF (WITH_GRASS)
   SET (GRASS_PREFIX "" CACHE PATH "Path to GRASS base directory")
 ENDIF (WITH_GRASS)
 
-# try to configure and build POSTGRESQL support
-SET (WITH_POSTGRESQL TRUE CACHE BOOL "Determines whether POSTGRESQL support should be built")
 IF (WITH_POSTGRESQL)
   SET (POSTGRESQL_PREFIX "" CACHE PATH "Path to POSTGRESQL base directory")
 ENDIF (WITH_POSTGRESQL)
 
-SET (WITH_SPATIALITE TRUE CACHE BOOL "Determines whether SPATIALITE support should be built")
 
 IF (WITH_SPATIALITE)
   SET (WITH_INTERNAL_SPATIALITE TRUE CACHE BOOL "Determines whether SPATIALITE support should be built internally")
   IF(WITH_INTERNAL_SPATIALITE)
     SET(SPATIALITE_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/src/core/spatialite/headers)
     SET(HAVE_SPATIALITE TRUE)
-    IF(WIN32 OR APPLE)
-      FIND_PACKAGE(Iconv REQUIRED)
-    ENDIF(WIN32 OR APPLE)
   ENDIF (WITH_INTERNAL_SPATIALITE)
 ENDIF (WITH_SPATIALITE)
 
-# try to configure and build python bindings by default
-SET (WITH_BINDINGS TRUE CACHE BOOL "Determines whether python bindings should be built")
 IF (WITH_BINDINGS)
-  # By default bindings will be installed only to QGIS directory
-  # Someone might want to install it to python site-packages directory
-  # as otherwise user has to use PYTHONPATH environemnt variable to add
-  # QGIS bindings to package search path
-  SET (BINDINGS_GLOBAL_INSTALL FALSE CACHE BOOL "Install bindings to global python directory? (might need root)")
+  SET (BINDINGS_GLOBAL_INSTALL TRUE CACHE BOOL "Install bindings to global python directory? (might need root)")
 ENDIF (WITH_BINDINGS)
 
 # Compile flag. Make it posible to turn it off.
@@ -137,9 +101,6 @@
 ENDIF (WITH_SPATIALITE AND NOT WITH_INTERNAL_SPATIALITE)
 
 IF (WITH_BINDINGS)
-  # python support:
-  # - mapserver export tool
-  # - bindings
   INCLUDE (Python) # file cmake/Python.cmake
 ENDIF (WITH_BINDINGS)
 
